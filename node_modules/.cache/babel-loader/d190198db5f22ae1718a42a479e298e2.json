{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\keato\\\\Documents\\\\React\\\\08-full-example\\\\src\\\\components\\\\Users\\\\AddUser.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Card from '../UI/Card';\nimport classes from './AddUser.module.css';\nimport Button from '../UI/Button';\nimport ErrorModal from '../UI/ErrorModal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AddUser = props => {\n  _s();\n\n  const [enteredUsername, setEnteredUsername] = useState('');\n  const [enteredAge, setEnteredAge] = useState('');\n  const [isError, setError] = useState();\n\n  const addUserHandler = event => {\n    event.preventDefault();\n\n    if (enteredUsername.trim().length === 0 || enteredAge.trim().length === 0) {\n      setError({\n        title: 'Invalid Input',\n        message: 'Please enter a valid name and age (non-empty values).'\n      });\n      return;\n    }\n\n    if (+enteredAge < 1) {\n      setError({\n        title: 'Invalid Age',\n        message: 'The age must be greater than 0!'\n      });\n      return;\n    }\n\n    const randKey = Math.floor((1 + Math.random()) * 0x10000).toString(16).substring(1);\n    props.onAddUser(enteredUsername, enteredAge, randKey);\n    console.log(enteredUsername, enteredAge, randKey);\n    setEnteredUsername('');\n    setEnteredAge('');\n  };\n\n  const usernameChangeHandler = event => {\n    setEnteredUsername(event.target.value);\n  };\n\n  const ageChangeHandler = event => {\n    setEnteredAge(event.target.value);\n  };\n\n  const errorHandler = () => {\n    setError(null);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [isError && /*#__PURE__*/_jsxDEV(ErrorModal, {\n      title: isError.title,\n      message: isError.message,\n      onConfirm: errorHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 21\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      className: classes.input,\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: addUserHandler,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"username\",\n          children: \"Username\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"username\",\n          value: enteredUsername,\n          type: \"text\",\n          onChange: usernameChangeHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"age\",\n          children: \"Age (Years)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"age\",\n          value: enteredAge,\n          type: \"number\",\n          onChange: ageChangeHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          children: \"Add User\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 9\n  }, this);\n};\n\n_s(AddUser, \"kq+RLHYbtZwZSYlgO1OR2DJ4Nms=\");\n\n_c = AddUser;\nexport default AddUser;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddUser\");","map":{"version":3,"sources":["C:/Users/keato/Documents/React/08-full-example/src/components/Users/AddUser.js"],"names":["React","useState","Card","classes","Button","ErrorModal","AddUser","props","enteredUsername","setEnteredUsername","enteredAge","setEnteredAge","isError","setError","addUserHandler","event","preventDefault","trim","length","title","message","randKey","Math","floor","random","toString","substring","onAddUser","console","log","usernameChangeHandler","target","value","ageChangeHandler","errorHandler","input"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\r\nimport Card from '../UI/Card';\r\nimport classes from './AddUser.module.css';\r\nimport Button from '../UI/Button';\r\nimport ErrorModal from '../UI/ErrorModal';\r\n\r\nconst AddUser = props => {\r\n    const [enteredUsername, setEnteredUsername] = useState('');\r\n    const [enteredAge, setEnteredAge] = useState('');\r\n    const [isError, setError] = useState();\r\n\r\n    const addUserHandler = (event) => {\r\n        event.preventDefault();\r\n        if(enteredUsername.trim().length === 0 || enteredAge.trim().length === 0){\r\n            setError({\r\n                title: 'Invalid Input',\r\n                message: 'Please enter a valid name and age (non-empty values).'\r\n            });\r\n            return;\r\n        }\r\n        if(+enteredAge < 1){\r\n            setError({\r\n                title: 'Invalid Age',\r\n                message: 'The age must be greater than 0!'\r\n            });\r\n            return;\r\n        }\r\n        const randKey = Math.floor((1 + Math.random()) * 0x10000).toString(16).substring(1);\r\n        props.onAddUser(enteredUsername,enteredAge, randKey);\r\n        console.log(enteredUsername, enteredAge,randKey);\r\n        setEnteredUsername('');\r\n        setEnteredAge('');\r\n    }\r\n    const usernameChangeHandler = (event) => {\r\n        setEnteredUsername(event.target.value);\r\n        \r\n    };\r\n    const ageChangeHandler = (event) => {\r\n        setEnteredAge(event.target.value);\r\n        \r\n    };\r\n    const errorHandler = () => {\r\n        setError(null);\r\n    }\r\n    return (\r\n        <div>\r\n        {isError && <ErrorModal title={isError.title} message={isError.message} onConfirm={errorHandler} />}\r\n        <Card className={classes.input}>\r\n            <form onSubmit={addUserHandler}>\r\n                <label htmlFor='username'>Username</label>\r\n                <input id=\"username\" value={enteredUsername}type=\"text\" onChange={usernameChangeHandler}></input>\r\n                <label htmlFor='age'>Age (Years)</label>\r\n                <input id=\"age\" value={enteredAge} type=\"number\" onChange={ageChangeHandler}></input>\r\n                <Button type=\"submit\">Add User</Button>\r\n            </form>\r\n        </Card>\r\n        </div>\r\n\r\n        )\r\n}\r\n\r\nexport default AddUser;"]},"metadata":{},"sourceType":"module"}